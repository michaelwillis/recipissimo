[
 ;; ingredient attributes

 {:db/id #db/id[:db.part/db]
  :db/ident :ingredient/name
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/index true
  :db.install/_attribute :db.part/db}

  {:db/id #db/id[:db.part/db]
  :db/ident :ingredient/raw-text
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/index true
  :db.install/_attribute :db.part/db}

 ;; recipe attributes
 
 {:db/id #db/id[:db.part/db]
  :db/ident :recipe/name
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/index true
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :recipe/description
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/index true
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :recipe/image
  :db/valueType :db.type/uri
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}
 
 {:db/id #db/id[:db.part/db]
  :db/ident :recipe/url
  :db/valueType :db.type/uri
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :recipe/ingredients
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db.install/_attribute :db.part/db}

 ;; ingredient-category attributes

 {:db/id #db/id[:db.part/db]
  :db/ident :ingredient-category/name
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}
 
 {:db/id #db/id[:db.part/db]
  :db/ident :ingredient-category/ingredient-names
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/many
  :db.install/_attribute :db.part/db}
 
 ;; menu attributes

 {:db/id #db/id[:db.part/db]
  :db/ident :menu/year
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :menu/month
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :menu/date
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :menu/recipes
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db.install/_attribute :db.part/db}

 ;; transaction function

 {:db/id #db/id[:db.part/user]
  :db/ident :set-ingredient-category
  :db/doc "Sets ingredient category and removes from prior category if one exists"
  :db/fn #db/fn {:lang "clojure"
                 :params [db ingredient-name category-name]
                 :code (let [prior-category
                             (-> '[:find ?c :in $ ?ingredient-name :where
                                   [?c :ingredient-category/ingredient-names ?ingredient-name]]
                                 (datomic.api/q db ingredient-name)
                                 (ffirst))

                             new-category
                             (-> '[:find ?c :in $ ?name :where
                                   [?c :ingredient-category/name ?name]]
                                 (datomic.api/q db category-name)
                                 (ffirst))
                             tx []
                             tx (if new-category
                                  (conj tx [:db/add new-category
                                            :ingredient-category/ingredient-names
                                            ingredient-name])
                                  tx)
                             tx (if prior-category
                                  (conj tx [:db/retract prior-category
                                            :ingredient-category/ingredient-names
                                            ingredient-name])
                                  tx)]
                         tx)}}]
